<?php

namespace Proxies\__CG__\Site\AdminBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Categories extends \Site\AdminBundle\Entity\Categories implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setDateCreated($dateCreated)
    {
        $this->__load();
        return parent::setDateCreated($dateCreated);
    }

    public function getDateCreated()
    {
        $this->__load();
        return parent::getDateCreated();
    }

    public function setSlug($slug)
    {
        $this->__load();
        return parent::setSlug($slug);
    }

    public function getSlug()
    {
        $this->__load();
        return parent::getSlug();
    }

    public function setLft($lft)
    {
        $this->__load();
        return parent::setLft($lft);
    }

    public function getLft()
    {
        $this->__load();
        return parent::getLft();
    }

    public function setLvl($lvl)
    {
        $this->__load();
        return parent::setLvl($lvl);
    }

    public function getLvl()
    {
        $this->__load();
        return parent::getLvl();
    }

    public function setRgt($rgt)
    {
        $this->__load();
        return parent::setRgt($rgt);
    }

    public function getRgt()
    {
        $this->__load();
        return parent::getRgt();
    }

    public function setRoot($root)
    {
        $this->__load();
        return parent::setRoot($root);
    }

    public function getRoot()
    {
        $this->__load();
        return parent::getRoot();
    }

    public function setParent($parent = NULL)
    {
        $this->__load();
        return parent::setParent($parent);
    }

    public function getParent()
    {
        $this->__load();
        return parent::getParent();
    }

    public function getOptionLabel()
    {
        $this->__load();
        return parent::getOptionLabel();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getLaveledTitle()
    {
        $this->__load();
        return parent::getLaveledTitle();
    }

    public function setPosition($position)
    {
        $this->__load();
        return parent::setPosition($position);
    }

    public function getPosition()
    {
        $this->__load();
        return parent::getPosition();
    }

    public function addChildren(\Site\AdminBundle\Entity\Categories $children)
    {
        $this->__load();
        return parent::addChildren($children);
    }

    public function removeChildren(\Site\AdminBundle\Entity\Categories $children)
    {
        $this->__load();
        return parent::removeChildren($children);
    }

    public function getChildren()
    {
        $this->__load();
        return parent::getChildren();
    }

    public function getIndentedTitle()
    {
        $this->__load();
        return parent::getIndentedTitle();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'title', 'description', 'dateCreated', 'slug', 'lft', 'lvl', 'rgt', 'root', 'position', 'parent', 'children');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}